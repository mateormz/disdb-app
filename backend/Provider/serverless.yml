org: ${env:SLS_ORG}
service: disdb-provider-api

provider:
  name: aws
  runtime: python3.9
  iam:
    role: ${env:AWS_ROLE_ARN}
  memorySize: 1024
  timeout: 29
  environment:
    # Tables
    TABLE_PROVIDERS: ${sls:stage}-disdb-provider-table

    # Service info
    SERVICE_NAME: disdb-provider-api
    STAGE: ${sls:stage}

    # Function names
    VALIDATE_TOKEN_FUNCTION: validateToken

    # User function
    USER_API: disdb-user-api

functions:
  createProvider:
    handler: createProvider.lambda_handler
    events:
      - http:
          path: /provider/create
          method: post
          cors: true
  
  getProviderByID:
    handler: getProviderByID.lambda_handler
    events:
      - http:
          path: /provider/get/{PK}/{SK}
          method: get
          cors: true
  
  # updateProvider:
  #   handler: updateProvider.lambda_handler
  #   events:
  #     - http:
  #         path: /provider/update/{PK}/{SK}
  #         method: put
  #         cors: true

  # deleteProvider:
  #   handler: deleteProvider.lambda_handler
  #   events:
  #     - http:
  #         path: /provider/delete/{PK}/{SK}
  #         method: delete
  #         cors: true

  # getAllProviders:
  #   handler: getAllProviders.lambda_handler
  #   events:
  #     - http:
  #         path: /provider/getAll/{PK}
  #         method: get
  #         cors: true

resources:
  Resources:
    DisdbProvidersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_PROVIDERS}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true