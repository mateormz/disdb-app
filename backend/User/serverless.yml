org: ${env:SLS_ORG}
service: disdb-user-api

provider:
  name: aws
  runtime: python3.9
  iam:
    role: ${env:AWS_ROLE_ARN}
  memorySize: 1024
  timeout: 29
  environment:
    # Tables
    TABLE_USERS: ${sls:stage}-disdb-user-table
    TABLE_TOKENS: ${sls:stage}-disdb-tokens-table

    # Index user
    INDEX_EMAIL_USERS: email-index
    INDEX_SHORTCODE_USERS: short-code-index

    # Index token
    INDEX_TOKENS: token-index
    
    # Service info
    SERVICE_NAME: disdb-user-api
    STAGE: ${sls:stage}

    # Function names
    VALIDATE_TOKEN_FUNCTION: validateToken

functions:
  register:
    handler: register.lambda_handler
    events:
      - http:
          path: /user/register
          method: post
          cors: true

  login:
    handler: login.lambda_handler
    events:
      - http:
          path: /user/login
          method: post
          cors: true

  validateToken:
    handler: validateToken.lambda_handler
    events:
      - http:
          path: /token/validate
          method: post
          cors: true

  getUserById:
    handler: getUserById.lambda_handler
    events:
      - http:
          path: /user/get/{PK}/{SK}
          method: get
          cors: true

  updateUser:
    handler: updateUser.lambda_handler
    events:
      - http:
          path: /user/update/{PK}/{SK}
          method: put
          cors: true

  deleteUser:
    handler: deleteUser.lambda_handler
    events:
      - http:
          path: /user/delete/{PK}/{SK}
          method: delete
          cors: true

  createDeliveryPerson:
    handler: createDeliveryPerson.lambda_handler
    events:
      - http:
          path: /user/create-delivery-person
          method: post
          cors: true

resources:
  Resources:
    DisdbUsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_USERS}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: short_code
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.INDEX_EMAIL_USERS}
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: ${self:provider.environment.INDEX_SHORTCODE_USERS}
            KeySchema:
              - AttributeName: short_code
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true

    DisdbTokensTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_TOKENS}
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.INDEX_TOKENS}
            KeySchema:
              - AttributeName: token
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true